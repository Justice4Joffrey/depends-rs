permissions:
  contents: read
on:
  push:
    branches: [ master ]
  pull_request:
name: test
jobs:
  required:
    runs-on: ubuntu-latest
    name: ubuntu / ${{ matrix.toolchain }}
    strategy:
      matrix:
        toolchain: [ stable, beta ]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install nightly for fmt tests
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: rustup default ${{ matrix.toolchain }}
        run: rustup default ${{ matrix.toolchain }}
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo test --locked
        run: cargo test --workspace --locked --all-features --all-targets --exclude benches
  minimal:
    runs-on: ubuntu-latest
    name: ubuntu / stable / minimal-versions
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - name: Install nightly for fmt tests
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: rustup default stable
        run: rustup default stable
      - name: cargo update -Zminimal-versions
        run: cargo +nightly update -Zminimal-versions
      - name: cargo test
        run: cargo test --workspace --locked --all-features --all-targets --exclude benches
  os-check:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} / stable
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install nightly for fmt tests
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo test
        run: cargo test --workspace --locked --all-features --all-targets --exclude benches
  coverage:
    runs-on: ubuntu-latest
    name: ubuntu / stable / coverage
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install nightly for fmt tests
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo llvm-cov
        run: cargo llvm-cov --workspace --locked --all-features --exclude benches --lcov --output-path lcov.info
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
